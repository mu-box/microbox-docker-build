#!/usr/bin/env ruby

# Mount files  
# 1 - iterate through lib_dirs
#   a - ensure the source exists (with proper permissions) 
#   b - ensure the destination exists (with proper permissions)
#   c - bind mount

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

# import some logic/helpers from lib/*.rb
include Nanobox::Engine
include Nanobox::Output
include Nanobox::Boxfile
include Nanobox::Hook

logger.print(bullet("Running mount hook..."), 'debug')

# 1 - iterate through lib_dirs
build[:lib_dirs].each do |dir|
  # ensure the source exists
  execute "mkdir -p #{LIB_CACHE_DIR}/#{dir}" do
    user 'gonano'
  end

  # ensure the destination exists
  execute "mkdir -p #{CODE_DIR}/#{dir}" do
    user 'gonano'
  end

  # bind mount the source onto the destination
  execute "mount -o bind #{LIB_CACHE_DIR}/#{dir} #{CODE_DIR}/#{dir}"
end
