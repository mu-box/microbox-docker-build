#!/usr/bin/env ruby

# Pack the contents of the /data pkgsrc bootstrap into the 'build' directory
#
# The packed 'build' directory contains all of the binaries and packages
# required to build the application. This build directory is eventually
# mounted into the dev container.
#
# 1 - rsync /data to /mnt/build
# 2 - rsync pkgsrc cache into cache

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

# import some logic/helpers from lib/*.rb
include Nanobox::Engine
include Nanobox::Output
include Nanobox::Boxfile

# 1 - rsync/copy into /mnt/*
logger.print(process_start('Copy build env into place'), 'debug')

execute "rsync build" do
  command <<-EOF
    rsync \
      -v \
      -a \
      --delete \
      #{DATA_DIR}/ \
      #{BUILD_DIR}
  EOF
  user 'gonano'
  stream true
  on_data { |data| logger.print subtask_info(data), 'debug' }
end

# 2 - rsync pkgsrc cache into cache
if ::File.exist? "#{DATA_DIR}/var/db/pkgin/cache"
  directory "#{CACHE_DIR}/pkgin" do
    owner 'gonano'
    group 'gonano'
    recursive true
  end

  execute "Insert pkgin packages from cache for quick access" do
    command <<-EOF
      rsync \
        -v \
        -a \
        --delete \
        #{DATA_DIR}/var/db/pkgin/cache/ \
        #{CACHE_DIR}/pkgin
    EOF
    user 'gonano'
    stream true
    on_data { |data| logger.print subtask_info(data), 'debug' }
  end
end
